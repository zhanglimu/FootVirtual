{"version":3,"sources":["../../../src/shared/utils/bounding.ts"],"names":[],"mappings":"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","file":"bounding.js","sourceRoot":"","sourcesContent":["\ntype Shape = { width: number, height: number }\n\nconst /** @type {?} */ getRealShape = (el: HTMLElement): any => {\n  const /** @type {?} */ rect: any = el.getBoundingClientRect()\n  const { width, height } = window.getComputedStyle(el)\n  const /** @type {?} */ getCSSStyleVal: Function = (val: string | null | number, parentNum: number): number => {\n    if (!val) return 0\n    const /** @type {?} */ str = String(val)\n    const /** @type {?} */ strVal = str.includes('px') ? str.split('px')[0] :\n      str.includes('%') ? Number(str.split('%')[0]) * parentNum * 0.01 : str\n    return Number.isNaN(Number(strVal)) ? 0 : Number(strVal)\n  }\n  return {\n    width: getCSSStyleVal(width, rect.width),\n    height: getCSSStyleVal(height, rect.height),\n  }\n}\n\nconst /** @type {?} */ getPositionForDir = (\n  hostRect: ClientRect,\n  selfRect: any,\n  dir: string,\n  arrowDir: string\n): any => {\n  const /** @type {?} */ diffWidth: number = hostRect.width - selfRect.width\n  const /** @type {?} */ diffHeight: number = selfRect.height - hostRect.height\n  const /** @type {?} */ topMap: any = {\n    top:  - 10 - selfRect.height,\n    bottom: hostRect.height,\n    left: arrowDir === 'start' ? 0 : arrowDir === 'end' ? 0 - diffHeight : 0 - Math.abs(diffHeight / 2),\n    right: arrowDir === 'start' ? 0 : arrowDir === 'end' ? 0 - diffHeight : 0 - Math.abs(diffHeight / 2),\n  }\n  const /** @type {?} */ leftMap: any = {\n    left: - 10 - selfRect.width,\n    right: hostRect.width,\n    top: arrowDir === 'start' ? 0 : arrowDir === 'end' ? diffWidth : diffWidth / 2,\n    bottom: arrowDir === 'start' ? 0 : arrowDir === 'end' ? diffWidth : diffWidth / 2,\n  }\n  const /** @type {?} */ isHorizontal: boolean = dir === 'left' || dir === 'right'\n  const /** @type {?} */ arrowLen = isHorizontal\n    ? arrowDir === 'center' ? selfRect.height  : Math.min(hostRect.height, selfRect.height)\n    : arrowDir === 'center' ? selfRect.width  : Math.min(hostRect.height, selfRect.height)\n  \n  const /** @type {?} */ position = {\n    arrowFace: dir,\n    arrowDir: isHorizontal ? (arrowDir === 'end' ? 'bottom' : 'top') : (arrowDir === 'start' ? 'left' : 'right'),\n    arrowPosition: arrowLen / 2 -5,\n    top: topMap[dir],\n    left: leftMap[dir],\n  }\n  \n  return position\n}\n\nexport {\n  getPositionForDir,\n  getRealShape,\n};\n\n"]}