import { Component, Input, Optional, } from '@angular/core';
import { ElTree } from './tree';
import { dropAnimation } from '../shared/animation/index';
export class ElTreeItem {
    /**
     * @param {?} root
     */
    constructor(root) {
        this.root = root;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    clickHandle(event) {
        event.stopPropagation();
        if (!this.root.expandOnClickNode)
            return;
        this.updateExpanded();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    iconClickHandle(event) {
        event.stopPropagation();
        this.updateExpanded();
    }
    /**
     * @return {?}
     */
    checkHandle() {
        if (this.root.elDisabled)
            return;
        this.root.updateChecked(this.model.id);
        this.root.emitter({
            label: this.model.label,
            treeNodeID: this.model.id,
            action: 'checkbox',
            checked: this.model.checked,
        });
    }
    /**
     * @return {?}
     */
    updateExpanded() {
        const /** @type {?} */ dontUpdateExpanded = this.isLeaf();
        const /** @type {?} */ nextAction = dontUpdateExpanded ? 'click' : (this.model.expanded ? 'close' : 'open');
        this.root.emitter({
            label: this.model.label,
            treeNodeID: this.model.id,
            action: nextAction,
            checked: this.model.checked,
        });
        !dontUpdateExpanded && this.root.updateExpanded(this.model.id);
    }
    /**
     * @return {?}
     */
    isLeaf() {
        return !this.model.children || !this.model.children.length;
    }
}
ElTreeItem.decorators = [
    { type: Component, args: [{
                selector: 'el-tree-item',
                animations: [dropAnimation],
                template: `
    <div class="el-tree-node" (click)="clickHandle($event)"
      [class.is-focusable]="!root.elDisabled"
      [class.is-checked]="!root.elDisabled && model.checked"
      role="treeitem">
      <div class="el-tree-node__content"
        [ngStyle]="{ 'padding-left': (model._level - 1) * indent + 'px' }">
        <span class="el-tree-node__expand-icon el-icon-caret-right"
          [class.expanded]="model.expanded"
          [class.is-leaf]="isLeaf()"
          (click)="iconClickHandle($event)"></span>
        <el-checkbox *ngIf="root.showCheckbox" [model]="model.checked" [indeterminate]="model._indeterminate"
          [elDisabled]="root.elDisabled"
          (modelChange)="checkHandle($event)">
        </el-checkbox>
        <span class="el-tree-node__label">{{ model.label }}</span>
      </div>
      <div class="el-tree-node__children" *ngIf="!isLeaf()" [@dropAnimation]="model.expanded">
        <el-tree-item *ngFor="let item of model.children"
          [model]="item" [indent]="indent">
        </el-tree-item>
      </div>
    </div>
  `,
            },] },
];
/**
 * @nocollapse
 */
ElTreeItem.ctorParameters = () => [
    { type: ElTree, decorators: [{ type: Optional },] },
];
ElTreeItem.propDecorators = {
    'indent': [{ type: Input },],
    'model': [{ type: Input },],
};
function ElTreeItem_tsickle_Closure_declarations() {
    /** @type {?} */
    ElTreeItem.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ElTreeItem.ctorParameters;
    /** @type {?} */
    ElTreeItem.propDecorators;
    /** @type {?} */
    ElTreeItem.prototype.indent;
    /** @type {?} */
    ElTreeItem.prototype.model;
    /** @type {?} */
    ElTreeItem.prototype.root;
}
//# sourceMappingURL=tree-item.js.map