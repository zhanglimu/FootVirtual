import { EventEmitter, Input, Output } from '@angular/core';
import { ModelStandard } from './utils';
export class ElTreeProps {
    constructor() {
        this.modelChange = new EventEmitter();
        this.emptyText = '';
        this.showCheckbox = false;
        this.defaultExpandAll = false;
        this.defaultExpandedKeys = [];
        this.defaultCheckedKeys = [];
        this.expandOnClickNode = true;
        this.indent = 16;
        this.accordion = false;
        this.elDisabled = false;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set model(val) {
        const /** @type {?} */ standardTool = new ModelStandard({
            initDepth: 0,
            defaultExpandAll: this.defaultExpandAll,
            defaultExpandedKeys: this.defaultExpandedKeys,
            defaultCheckedKeys: this.defaultCheckedKeys,
        });
        this.identModel = standardTool.filterModel(val);
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set disabled(val) {
        console.warn('Element Angular: (disabled) is discarded, use [elDisabled] replace it.');
    }
}
ElTreeProps.propDecorators = {
    'model': [{ type: Input },],
    'modelChange': [{ type: Output },],
    'emptyText': [{ type: Input, args: ['empty-text',] },],
    'showCheckbox': [{ type: Input, args: ['show-checkbox',] },],
    'defaultExpandAll': [{ type: Input, args: ['default-expand-all',] },],
    'defaultExpandedKeys': [{ type: Input, args: ['default-expanded-keys',] },],
    'defaultCheckedKeys': [{ type: Input, args: ['default-checked-keys',] },],
    'expandOnClickNode': [{ type: Input, args: ['expand-on-click-node',] },],
    'indent': [{ type: Input },],
    'accordion': [{ type: Input },],
    'disabled': [{ type: Input },],
    'elDisabled': [{ type: Input },],
};
function ElTreeProps_tsickle_Closure_declarations() {
    /** @type {?} */
    ElTreeProps.propDecorators;
    /** @type {?} */
    ElTreeProps.prototype.identModel;
    /** @type {?} */
    ElTreeProps.prototype.modelChange;
    /** @type {?} */
    ElTreeProps.prototype.emptyText;
    /** @type {?} */
    ElTreeProps.prototype.showCheckbox;
    /** @type {?} */
    ElTreeProps.prototype.defaultExpandAll;
    /** @type {?} */
    ElTreeProps.prototype.defaultExpandedKeys;
    /** @type {?} */
    ElTreeProps.prototype.defaultCheckedKeys;
    /** @type {?} */
    ElTreeProps.prototype.expandOnClickNode;
    /** @type {?} */
    ElTreeProps.prototype.indent;
    /** @type {?} */
    ElTreeProps.prototype.accordion;
    /** @type {?} */
    ElTreeProps.prototype.elDisabled;
}
//# sourceMappingURL=tree-props.js.map