{"version":3,"sources":["../../src/tree/tree-props.ts"],"names":[],"mappings":"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","file":"tree-props.js","sourceRoot":"","sourcesContent":["import { EventEmitter, Input, Output } from '@angular/core';\nimport { ModelStandard } from './utils';\n\nexport type ElTreeModelData = {\n  label: string,\n  checked?: boolean,\n  expanded?: boolean,\n  _level?: number,\n  _indeterminate?: boolean,\n  id?: number | string,\n  children?: ElTreeModelData[],\n}\n\nexport type ElTreeModelEvent = {\n  label: string,\n  treeNodeID: string | number,\n  action: string,     // close, open, click, checkbox\n  checked: boolean,\n}\nexport class ElTreeProps {\n  \n  identModel: ElTreeModelData[]\n/**\n * @param {?} val\n * @return {?}\n */\nset model(val: ElTreeModelData[]) {\n    const /** @type {?} */ standardTool = new ModelStandard({\n      initDepth: 0,\n      defaultExpandAll: this.defaultExpandAll,\n      defaultExpandedKeys: this.defaultExpandedKeys,\n      defaultCheckedKeys: this.defaultCheckedKeys,\n    })\n    this.identModel = standardTool.filterModel(val)\n  }\n   modelChange: EventEmitter<ElTreeModelEvent> = new EventEmitter<ElTreeModelEvent>()\n  \n   emptyText: string = ''\n   showCheckbox: boolean = false\n   defaultExpandAll: boolean = false\n   defaultExpandedKeys: Array<string | number> = []\n   defaultCheckedKeys: Array<string | number> = []\n   expandOnClickNode: boolean = true\n   indent: number = 16\n   accordion: boolean = false\n/**\n * @param {?} val\n * @return {?}\n */\nset disabled(val: boolean) {   // todo, is discarded.\n    console.warn('Element Angular: (disabled) is discarded, use [elDisabled] replace it.')\n  }\n   elDisabled: boolean = false\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'model': [{ type: Input },],\n'modelChange': [{ type: Output },],\n'emptyText': [{ type: Input, args: ['empty-text', ] },],\n'showCheckbox': [{ type: Input, args: ['show-checkbox', ] },],\n'defaultExpandAll': [{ type: Input, args: ['default-expand-all', ] },],\n'defaultExpandedKeys': [{ type: Input, args: ['default-expanded-keys', ] },],\n'defaultCheckedKeys': [{ type: Input, args: ['default-checked-keys', ] },],\n'expandOnClickNode': [{ type: Input, args: ['expand-on-click-node', ] },],\n'indent': [{ type: Input },],\n'accordion': [{ type: Input },],\n'disabled': [{ type: Input },],\n'elDisabled': [{ type: Input },],\n};\n}\n\nfunction ElTreeProps_tsickle_Closure_declarations() {\n/** @type {?} */\nElTreeProps.propDecorators;\n/** @type {?} */\nElTreeProps.prototype.identModel;\n/** @type {?} */\nElTreeProps.prototype.modelChange;\n/** @type {?} */\nElTreeProps.prototype.emptyText;\n/** @type {?} */\nElTreeProps.prototype.showCheckbox;\n/** @type {?} */\nElTreeProps.prototype.defaultExpandAll;\n/** @type {?} */\nElTreeProps.prototype.defaultExpandedKeys;\n/** @type {?} */\nElTreeProps.prototype.defaultCheckedKeys;\n/** @type {?} */\nElTreeProps.prototype.expandOnClickNode;\n/** @type {?} */\nElTreeProps.prototype.indent;\n/** @type {?} */\nElTreeProps.prototype.accordion;\n/** @type {?} */\nElTreeProps.prototype.elDisabled;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}