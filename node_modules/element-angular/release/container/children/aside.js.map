{"version":3,"sources":["../../../src/container/children/aside.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAAY,KAAA,EAAc,MAAA,eAAA,CAAA;AAC9C,OAAO,EAAE,WAAA,EAAY,MAAA,0BAAA,CAAA;AACrB,MAEC;IAED;;OAEG;IACH,YACY,EAAI;QAAJ,OAAA,GAAA,EAAA,CAAI;QANb,UAAK,GAEW,OAAA,CAAA;IAMjB,CAAC;IACH;;OAEG;IACH,QAFG;QAGC,WAAW,CAFC,IAAC,CAAI,EAAC,CAAE,aAAC,CAAa,CAAA;IAGpC,CAAC;;AADI,kBAAA,GAAoC;IAG3C,EAFE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAGvB,QAAQ,EAFE,UAAA;gBAGV,QAAQ,EAFE;;;;GAMT;aACF,EAFC,EAAG;CAGJ,CAFC;AAGF;;GAEG;AAHF,sBAAA,GAAA,GAAA,EAAA,CAAA;IAKD,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,CAAC;AAHK,sBAAA,GAAyD;IAKhE,OAAO,EAJE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAK1B,OAAO,EAJE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAKzB,CAJC;AAOF;IACA,gBAAgB;IAChB,OAAO,CAAC,UAAU,CAAC;IACnB;;;OAGG;IACH,OAAO,CAAC,cAAc,CAAC;IACvB,gBAAgB;IAChB,OAAO,CAAC,cAAc,CAAC;IACvB,gBAAgB;IAChB,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC;IACxB,gBAAgB;IAChB,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC;IACxB,gBAAgB;IAChB,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC;AACrB,CAAC","file":"aside.js","sourceRoot":"","sourcesContent":["import { Component, ElementRef, Input, OnInit } from '@angular/core';\nimport { removeNgTag } from '../../shared/utils/index';\nexport class ElAside implements OnInit {\n  \n   width: string = '300px'\n   class: string\n/**\n * @param {?} el\n */\nconstructor(\nprivate el: ElementRef,\n  ) {\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    removeNgTag(this.el.nativeElement)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-aside',\n  template: `\n    <aside [class]=\"'el-aside ' + class\" [ngStyle]=\"{width: width}\">\n      <ng-content></ng-content>\n    </aside>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'width': [{ type: Input },],\n'class': [{ type: Input },],\n};\n}\n\nfunction ElAside_tsickle_Closure_declarations() {\n/** @type {?} */\nElAside.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElAside.ctorParameters;\n/** @type {?} */\nElAside.propDecorators;\n/** @type {?} */\nElAside.prototype.width;\n/** @type {?} */\nElAside.prototype.class;\n/** @type {?} */\nElAside.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}