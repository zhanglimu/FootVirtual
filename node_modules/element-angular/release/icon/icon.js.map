{"version":3,"sources":["../../src/icon/icon.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,uBAAA,EAAwB,MAAA,eAAA,CAAA;AACnD,MAEC;IACD;IAEE,CAAC;;AAKI,iBAAA,GAAoC;IAF3C,EAGE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAFvB,QAAQ,EAGE,SAAA;gBAFV,eAAe,EAGE,uBAAA,CAAwB,MAAC;gBAF1C,QAAQ,EAGE;;GADT;aACF,EAGC,EAAG;CAFJ,CAGC;AAFF;;GAEG;AAEF,qBAAA,GAAA,GAAA,EAAA,CAAA,EAAA,CAAC;AAEK,qBAAA,GAAyD;IAAhE,UAAU,EACE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,MAAE,EAAM,EAAG,EAAE;CAA9C,CACC;AAEF;IACA,gBAAgB;IAChB,MAAM,CAAC,UAAU,CAAC;IAClB;;;OAGG;IACH,MAAM,CAAC,cAAc,CAAC;IACtB,gBAAgB;IAChB,MAAM,CAAC,cAAc,CAAC;IACtB,gBAAgB;IAChB,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;AAC1B,CAAC","file":"icon.js","sourceRoot":"","sourcesContent":["import { Component, Input, ChangeDetectionStrategy} from '@angular/core';\nexport class ElIcon {\n  \n   iconName: string\nconstructor(\n  ) {\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-icon',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <i [class]=\"iconName ? 'el-icon-' + iconName : ''\"></i>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'iconName': [{ type: Input, args: ['name', ] },],\n};\n}\n\nfunction ElIcon_tsickle_Closure_declarations() {\n/** @type {?} */\nElIcon.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElIcon.ctorParameters;\n/** @type {?} */\nElIcon.propDecorators;\n/** @type {?} */\nElIcon.prototype.iconName;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}