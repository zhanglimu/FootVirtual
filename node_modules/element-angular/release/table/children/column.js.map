{"version":3,"sources":["../../../src/table/children/column.ts"],"names":[],"mappings":"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","file":"column.js","sourceRoot":"","sourcesContent":["import { Component, ContentChild, ElementRef, Input, OnInit, TemplateRef } from '@angular/core';\nimport { ElTable } from '../table';\nimport { TableColumn } from '../table.interface';\nexport class ElTableColumn implements OnInit {\n  \n   slot: TemplateRef<any>\n   modelKey: string\n   label: string\n   width: string | number = 'auto'\nprivate maxDeep: number = 10\n/**\n * @param {?} root\n * @param {?} el\n */\nconstructor(\nprivate root: ElTable,\nprivate el: ElementRef,\n  ) {\n  }\n/**\n * @param {?} self\n * @return {?}\n */\nfindChild(self: Element): number {\n    const /** @type {?} */ children = self.children\n    if (!children || !children.length) return 0\n    return Array.from(children)\n      .map((child: Element) =>\n        child.tagName.toUpperCase() === 'EL-TABLE-COLUMN')\n      .filter(r => r)\n      .length\n  }\n/**\n * @param {?} self\n * @return {?}\n */\nfindLevel(self: Element): number {\n    const /** @type {?} */ brothers = self.parentElement.children\n    const /** @type {?} */ brothersDeeps: number[] = Array.from(brothers).map((el: Element) => this.findDeep(el))\n    const /** @type {?} */ maxDeep: number = brothersDeeps.sort((pre, next) => next - pre)[0]\n    return maxDeep\n  }\n/**\n * @param {?} self\n * @return {?}\n */\nfindDeep(self: Element): number {\n    let /** @type {?} */ deep: number = 0\n    Array.from(new Array(this.maxDeep)).every(() => {\n      const /** @type {?} */ children = self.children\n      if (!children || !children.length) return false\n      if (children[0].tagName.toUpperCase() !== 'EL-TABLE-COLUMN') {\n        return false\n      }\n      self = children[0]\n      deep ++\n    })\n    return deep\n  }\n/**\n * @param {?} deep\n * @param {?} self\n * @return {?}\n */\nisLastElement(deep: number, self: Element): boolean {\n    if (deep !== 0) return false\n    let /** @type {?} */ isLast = true\n    Array.from(new Array(this.maxDeep)).every(() => {\n      const /** @type {?} */ parent: Element = self.parentElement\n      if (!parent) return false\n      if (self !== parent.children[parent.children.length - 1]) {\n        isLast = false\n        return false\n      }\n      if (parent.tagName.toUpperCase() !== 'EL-TABLE-COLUMN') {\n        return false\n      }\n      self = parent\n      return true\n    })\n    return isLast\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    const /** @type {?} */ self: any = this.el.nativeElement\n    const /** @type {?} */ brothers: Element[] = self.parentElement.children\n    const /** @type {?} */ deep: number = this.findDeep(self)\n    const /** @type {?} */ level: number = deep === 0 && brothers.length > 1 ? this.findLevel(self) : deep\n    \n    const /** @type {?} */ childCount: number = this.findChild(self)\n  \n    const /** @type {?} */ tableColumn: TableColumn = {\n      modelKey: this.modelKey,\n      label: this.label ? this.label : this.modelKey,\n      width: this.width,\n      slot: this.slot,\n      deep, level, childCount,\n    }\n    this.root.updateColumns(tableColumn)\n    if (deep === 0) {\n      this.root.updateColumnsWidth({ auto: false, width: +this.width })\n    }\n    \n    // last element\n    if (this.isLastElement(deep, self)) {\n      this.root.transformColumnsData()\n    }\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-table-column',\n  template: `\n    <ng-content></ng-content>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElTable, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'slot': [{ type: ContentChild, args: ['slot', ] },],\n'modelKey': [{ type: Input, args: ['model-key', ] },],\n'label': [{ type: Input },],\n'width': [{ type: Input },],\n};\n}\n\nfunction ElTableColumn_tsickle_Closure_declarations() {\n/** @type {?} */\nElTableColumn.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElTableColumn.ctorParameters;\n/** @type {?} */\nElTableColumn.propDecorators;\n/** @type {?} */\nElTableColumn.prototype.slot;\n/** @type {?} */\nElTableColumn.prototype.modelKey;\n/** @type {?} */\nElTableColumn.prototype.label;\n/** @type {?} */\nElTableColumn.prototype.width;\n/** @type {?} */\nElTableColumn.prototype.maxDeep;\n/** @type {?} */\nElTableColumn.prototype.root;\n/** @type {?} */\nElTableColumn.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}