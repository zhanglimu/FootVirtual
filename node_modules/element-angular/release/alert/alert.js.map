{"version":3,"sources":["../../src/alert/alert.ts"],"names":[],"mappings":"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","file":"alert.js","sourceRoot":"","sourcesContent":["import {\n  Component, Input, ChangeDetectionStrategy, Output, EventEmitter,\n  ContentChild, TemplateRef,\n} from '@angular/core';\nimport { fadeAnimation } from './animation';\n\nexport const /** @type {?} */ ICON_CLASS_MAP: { [key: string]: string } = {\n  'success': 'el-icon-success',\n  'warning': 'el-icon-warning',\n  'error': 'el-icon-error',\n  'info': 'el-icon-info',\n}\nexport class ElAlert {\n  \n   descriptionTmp: TemplateRef<any>\n  \n   type: string = 'info'\n   center: boolean = false\n   description: string\n   closable: boolean = true\n   closeText: string = ''\n   showIcon: boolean = false\n   close: EventEmitter<Event> = new EventEmitter<Event>()\n  \n  visible: boolean = true\n/**\n * @return {?}\n */\nmakeIconClass(): string {\n    const /** @type {?} */ base: string = ICON_CLASS_MAP[this.type] || 'el-icon-info'\n    const /** @type {?} */ isBig: string = this.description || this.descriptionTmp ? ' is-big' : ''\n    return base + isBig\n  }\n/**\n * @return {?}\n */\nmakeTitleClass(): string {\n    return this.description || this.descriptionTmp ? ' is-bold' : ''\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nclickHandle(event: Event): void {\n    this.visible = false\n    this.close.emit(event)\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-alert',\n  animations: [fadeAnimation],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div [class]=\"'el-alert el-alert--' + type\" [@fadeAnimation]=\"!visible\"\n      [class.is-center]=\"center\" role=\"alert\">\n      <i [class]=\"'el-alert__icon ' + makeIconClass()\" *ngIf=\"showIcon\"></i>\n      <div class=\"el-alert__content\">\n        <span [class]=\"'el-alert__title ' + makeTitleClass()\">\n          <ng-content></ng-content>\n        </span>\n        <p class=\"el-alert__description\" *ngIf=\"description && !descriptionTmp\">{{description}}</p>\n        <p class=\"el-alert__description\" *ngIf=\"descriptionTmp\"><ng-template [ngTemplateOutlet]=\"descriptionTmp\"></ng-template></p>\n        <i class=\"el-alert__closebtn\"\n          *ngIf=\"closable\"\n          [class.is-customed]=\"closeText !== ''\"\n          [class.el-icon-close]=\"closeText === ''\"\n          (click)=\"clickHandle($event)\">\n          {{closeText}}\n        </i>\n      </div>\n    </div>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'descriptionTmp': [{ type: ContentChild, args: ['description', ] },],\n'type': [{ type: Input },],\n'center': [{ type: Input },],\n'description': [{ type: Input },],\n'closable': [{ type: Input },],\n'closeText': [{ type: Input, args: ['close-text', ] },],\n'showIcon': [{ type: Input, args: ['show-icon', ] },],\n'close': [{ type: Output },],\n};\n}\n\nfunction ElAlert_tsickle_Closure_declarations() {\n/** @type {?} */\nElAlert.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElAlert.ctorParameters;\n/** @type {?} */\nElAlert.propDecorators;\n/** @type {?} */\nElAlert.prototype.descriptionTmp;\n/** @type {?} */\nElAlert.prototype.type;\n/** @type {?} */\nElAlert.prototype.center;\n/** @type {?} */\nElAlert.prototype.description;\n/** @type {?} */\nElAlert.prototype.closable;\n/** @type {?} */\nElAlert.prototype.closeText;\n/** @type {?} */\nElAlert.prototype.showIcon;\n/** @type {?} */\nElAlert.prototype.close;\n/** @type {?} */\nElAlert.prototype.visible;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}