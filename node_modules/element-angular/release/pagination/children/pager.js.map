{"version":3,"sources":["../../../src/pagination/children/pager.ts"],"names":[],"mappings":"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","file":"pager.js","sourceRoot":"","sourcesContent":["import { Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { removeNgTag } from '../../shared/utils/index';\nexport class ElPaginationPager implements OnInit, OnChanges {\n  \n   current: number = 1\n   count: number\n   next: EventEmitter<number> = new EventEmitter<number>()\n  \n  pagers: number[]\n  showPrevMore: boolean = false\n  showNextMore: boolean = false\n  quicknextIconClass: string = 'el-icon-more'\n  quickprevIconClass: string = 'el-icon-more'\n/**\n * @param {?} minValue\n * @return {?}\n */\nstatic pagerGenerator(minValue: number): number[] {\n    const /** @type {?} */ target: number[] = new Array(5).fill('').map((v, i) => i + minValue)\n    return target\n  }\n/**\n * @param {?} el\n */\nconstructor(\nprivate el: ElementRef,\n  ) {\n  }\n/**\n * Always show 5 numbers, excluding head and foot\n * like: 1 ... < 5, 6, 7, 8, 9 > ... 100\n * \n * jump page button is [showPrevMore] and [showNextMore]\n * \n * @param {?} current\n * @param {?} count\n * @return {?} number[], like: [2, 3, 4, 5, 6]\n * \n */\nmakePagers(current: number, count: number): number[] {\n    const /** @type {?} */ pagerCount: number = 7\n    if (count < pagerCount) {\n      this.setMoreBtn(false, false)\n      const /** @type {?} */ target: number[] = ElPaginationPager.pagerGenerator(2)\n      target.length = count - 2 >= 0 ? count - 2 : 0\n      return target\n    }\n    \n    const /** @type {?} */ max: number = current + 2\n    const /** @type {?} */ min: number = current - 2\n    if (max >= count) {\n      this.setMoreBtn(true, false)\n      return ElPaginationPager.pagerGenerator(count - 5)\n    }\n    if (min <= 2) {\n      this.setMoreBtn(false, true)\n      return ElPaginationPager.pagerGenerator(2)\n    }\n    this.setMoreBtn(true, true)\n    return ElPaginationPager.pagerGenerator(min)\n  }\n/**\n * @param {?} prev\n * @param {?} next\n * @return {?}\n */\nsetMoreBtn(prev: boolean, next: boolean): void {\n    this.showPrevMore = prev\n    this.showNextMore = next\n  }\n/**\n * @param {?} to\n * @return {?}\n */\nclickHandle(to: number): void {\n    const /** @type {?} */ step: number = to - this.current\n    this.next.emit(step)\n  }\n/**\n * @param {?} step\n * @return {?}\n */\njumpHandle(step: number): void {\n    this.next.emit(step)\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.pagers = this.makePagers(this.current, this.count)\n    removeNgTag(this.el.nativeElement)\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if (!changes) return\n    this.pagers = this.makePagers(this.current, this.count)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-pagination-pager',\n  template: `\n    <ul class=\"el-pager\">\n      <li class=\"number\" [class.active]=\"current === 1\"\n        (click)=\"clickHandle(1)\"\n        *ngIf=\"count > 0\">1</li>\n      <li *ngIf=\"showPrevMore\"\n        [class]=\"'el-icon more btn-quickprev ' + quickprevIconClass\"\n        (click)=\"jumpHandle(-5)\"\n        (mouseenter)=\"quickprevIconClass = 'el-icon-d-arrow-left'\"\n        (mouseleave)=\"quickprevIconClass = 'el-icon-more'\"></li>\n      <li class=\"number\"\n        *ngFor=\"let pager of pagers\"\n        (click)=\"clickHandle(pager)\"\n        [class.active]=\"current === pager\">{{ pager }}</li>\n      <li [class]=\"'el-icon more btn-quicknext ' + quicknextIconClass\"\n        *ngIf=\"showNextMore\"\n        (click)=\"jumpHandle(5)\"\n        (mouseenter)=\"quicknextIconClass = 'el-icon-d-arrow-right'\"\n        (mouseleave)=\"quicknextIconClass = 'el-icon-more'\"></li>\n      <li class=\"number\"\n        [class.active]=\"current === count\"\n        (click)=\"clickHandle(count)\"\n        *ngIf=\"count > 1\">{{ count }}</li>\n    </ul>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'current': [{ type: Input },],\n'count': [{ type: Input },],\n'next': [{ type: Output },],\n};\n}\n\nfunction ElPaginationPager_tsickle_Closure_declarations() {\n/** @type {?} */\nElPaginationPager.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElPaginationPager.ctorParameters;\n/** @type {?} */\nElPaginationPager.propDecorators;\n/** @type {?} */\nElPaginationPager.prototype.current;\n/** @type {?} */\nElPaginationPager.prototype.count;\n/** @type {?} */\nElPaginationPager.prototype.next;\n/** @type {?} */\nElPaginationPager.prototype.pagers;\n/** @type {?} */\nElPaginationPager.prototype.showPrevMore;\n/** @type {?} */\nElPaginationPager.prototype.showNextMore;\n/** @type {?} */\nElPaginationPager.prototype.quicknextIconClass;\n/** @type {?} */\nElPaginationPager.prototype.quickprevIconClass;\n/** @type {?} */\nElPaginationPager.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}