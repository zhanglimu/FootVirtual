{"version":3,"sources":["../../src/badge/badge.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,uBAAA,EAAwB,MAAA,eAAA,CAAA;AACnD,MAEC;IAFD;QAIG,WAAM,GAEY,KAAA,CAAA;QADlB,UAAK,GAEY,KAAA,CAAA;IAsCpB,CAAC;IAvCD;;OAEG;IACH,WAAG;QACC,EAAE,CAAC,CAAC,IAAC,CAAI,KAAC,CAAK;YAAC,MAAA,CAAO,EAAA,CAAA;QACvB,EAAE,CAAC,CAAC,OAAO,IAAA,CAAK,KAAC,KAAS,QAAA,CAAS,CAAC,CAAA;YAClC,MAAM,CAAC,IAAA,CAAK,GAAC,GAAK,IAAA,CAAK,KAAC,CAAK,CAAA,CAAE,GAAA,IAAI,CAAI,GAAC,GAAG,CAAG,CAAA,CAAE,IAAA,CAAK,KAAC,CAAK;QAC7D,CAAC;QACD,MAAM,CAAC,IAAA,CAAK,KAAC,CAAA;IACf,CAAC;;AAEI,kBAAA,GAAoC;IAC3C,EAAE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBACvB,QAAQ,EAAE,UAAA;gBACV,eAAe,EAAE,uBAAA,CAAwB,MAAC;gBAC1C,QAAQ,EAAE;;;;;;;;;;GAUT;aACF,EAAC,EAAG;CACJ,CAAC;AACF;;GAEG;AADF,sBAAA,GAAA,GAAA,EAAA,CAAA,EAGA,CAAC;AADK,sBAAA,GAAyD;IAGhE,OAAO,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAG1B,KAAK,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAGxB,QAAQ,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAG3B,OAZE,EAUO,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,QAAE,EAAQ,EAAG,EAAE;CAG7C,CAFC;AAKF;IACA,gBAAgB;IAChB,OAAO,CAAC,UAAU,CAAC;IACnB;;;OAGG;IACH,OAAO,CAAC,cAAc,CAAC;IACvB,gBAAgB;IAChB,OAAO,CAAC,cAAc,CAAC;IACvB,gBAAgB;IAChB,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC;IACxB,gBAAgB;IAChB,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;IACtB,gBAAgB;IAChB,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;IACzB,gBAAgB;IAChB,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC;AACxB,CAAC","file":"badge.js","sourceRoot":"","sourcesContent":["import { Component, Input, ChangeDetectionStrategy} from '@angular/core';\nexport class ElBadge {\n  \n   model: string | number\n   max: number                // only model is number\n   hidden: boolean = false\n   isDot: boolean = false\n/**\n * @return {?}\n */\nmakeContent(): string | number {\n    if (this.isDot) return ''\n    if (typeof this.model === 'number') {\n      return this.max < this.model ? `${this.max}+` : this.model;\n    }\n    return this.model\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-badge',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"el-badge\">\n      <ng-content></ng-content>\n      <sup *ngIf=\"!hidden && (!!makeContent() || isDot)\"\n        class=\"el-badge__content\"\n        style=\"z-index: 1;\"\n        [class.is-fixed]=\"true\" [class.is-dot]=\"isDot\">\n        {{makeContent()}}\n      </sup>\n    </div>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'model': [{ type: Input },],\n'max': [{ type: Input },],\n'hidden': [{ type: Input },],\n'isDot': [{ type: Input, args: ['is-dot', ] },],\n};\n}\n\nfunction ElBadge_tsickle_Closure_declarations() {\n/** @type {?} */\nElBadge.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElBadge.ctorParameters;\n/** @type {?} */\nElBadge.propDecorators;\n/** @type {?} */\nElBadge.prototype.model;\n/** @type {?} */\nElBadge.prototype.max;\n/** @type {?} */\nElBadge.prototype.hidden;\n/** @type {?} */\nElBadge.prototype.isDot;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}