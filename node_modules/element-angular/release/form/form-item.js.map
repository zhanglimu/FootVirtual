{"version":3,"sources":["../../src/form/form-item.ts"],"names":[],"mappings":"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","file":"form-item.js","sourceRoot":"","sourcesContent":["import { Component, Input, OnChanges, Optional, SimpleChanges } from '@angular/core';\nimport { ElForm } from './form';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nexport class ElFormItem implements OnChanges {\n  // error / success / validating\n   status: string\n   error: string\n   label: string\n   size: string\n   required: boolean = false\n   labelWidth: string\n   showMessage: boolean = true\n   inlineMessage: boolean\n  \n  statusSubscriber: Array<(status: string) => void> = []\n/**\n * @param {?} root\n * @param {?} sanitizer\n */\nconstructor(\npublic root: ElForm,\nprivate sanitizer: DomSanitizer,\n  ) {\n  }\n/**\n * @return {?}\n */\nshowMessageEl(): boolean {\n    if (this.status !== 'error') return false\n    return this.error && this.showMessage && this.root.showMessage\n  }\n/**\n * @return {?}\n */\nisInlineMessage(): boolean {\n    const /** @type {?} */ notDefault: boolean = typeof this.inlineMessage === 'boolean'\n    return notDefault ? this.inlineMessage : this.root.inlineMessage\n  }\n/**\n * @return {?}\n */\nmakeSize(): string {\n    const /** @type {?} */ appointed = this.size || this.root.size || ''\n    return appointed ? ` el-form-item--${appointed} ` : ''\n  }\n/**\n * @return {?}\n */\nmakeLabelStyle(): SafeStyle {\n    const /** @type {?} */ width: string = this.labelWidth || this.root.labelWidth || null\n    const /** @type {?} */ styles: string = width && this.root.labelPosition !== 'top' ? `width: ${width};` : ''\n    return this.sanitizer.bypassSecurityTrustStyle(styles)\n  }\n/**\n * @return {?}\n */\nmakeContentStyle(): SafeStyle {\n    const /** @type {?} */ skipStyle: boolean = (this.root.labelPosition === 'top' || this.root.inline)\n      || (!this.label && !this.root.labelWidth)\n    if (skipStyle) return this.sanitizer.bypassSecurityTrustStyle('')\n    const /** @type {?} */ width: string = this.labelWidth || this.root.labelWidth\n    const /** @type {?} */ styles: string = `margin-left: ${width};`\n    return this.sanitizer.bypassSecurityTrustStyle(styles)\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if (!this.root.showIcon) return\n    if (!changes || !changes.status) return\n    this.statusSubscriber.forEach(sub => {\n      sub(changes.status.currentValue)\n    })\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-form-item',\n  template: `\n  <div [class]=\"'el-form-item ' + makeSize()\"\n    [class.el-form-item--feedback]=\"root.showIcon\"\n    [class.is-error]=\"status === 'error'\"\n    [class.is-success]=\"status === 'success'\"\n    [class.is-validating]=\"status === 'validating'\"\n    [class.is-required]=\"required\">\n    <label class=\"el-form-item__label\" [style]=\"makeLabelStyle()\" *ngIf=\"label\">\n      {{label}}\n    </label>\n    <div class=\"el-form-item__content\" [style]=\"makeContentStyle()\">\n      <ng-content></ng-content>\n      <div *ngIf=\"showMessageEl\" class=\"el-form-item__error\"\n        [class.el-form-item__error--inline]=\"isInlineMessage()\">\n          {{error}}\n        </div>\n    </div>\n  </div>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElForm, decorators: [{ type: Optional }, ]},\n{type: DomSanitizer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'status': [{ type: Input },],\n'error': [{ type: Input },],\n'label': [{ type: Input },],\n'size': [{ type: Input },],\n'required': [{ type: Input },],\n'labelWidth': [{ type: Input, args: ['label-width', ] },],\n'showMessage': [{ type: Input, args: ['show-message', ] },],\n'inlineMessage': [{ type: Input, args: ['inline-message', ] },],\n};\n}\n\nfunction ElFormItem_tsickle_Closure_declarations() {\n/** @type {?} */\nElFormItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElFormItem.ctorParameters;\n/** @type {?} */\nElFormItem.propDecorators;\n/** @type {?} */\nElFormItem.prototype.status;\n/** @type {?} */\nElFormItem.prototype.error;\n/** @type {?} */\nElFormItem.prototype.label;\n/** @type {?} */\nElFormItem.prototype.size;\n/** @type {?} */\nElFormItem.prototype.required;\n/** @type {?} */\nElFormItem.prototype.labelWidth;\n/** @type {?} */\nElFormItem.prototype.showMessage;\n/** @type {?} */\nElFormItem.prototype.inlineMessage;\n/** @type {?} */\nElFormItem.prototype.statusSubscriber;\n/** @type {?} */\nElFormItem.prototype.root;\n/** @type {?} */\nElFormItem.prototype.sanitizer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}