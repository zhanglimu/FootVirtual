{"version":3,"sources":["../../src/dropdown/dropdown.props.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAA,EAAc,KAAA,EAAO,MAAA,EAAO,MAAA,eAAA,CAAA;AACrC,MACC;IADD;QAGG,gBAAW,GACY,KAAA,CAAA;QAIxB,QAAQ;QACP,cAAS,GACW,KAAA,CAAA;QACrB,eAAe;QACd,YAAO,GACW,OAAA,CAAA;QAAlB,gBAAW,GACY,IAAA,CAAA;QACxB,QAAQ;QACP,kBAAa,GACsB,IAAI,YAAA,EAAiB,CAAA;QAAxD,aAAQ,GACsB,IAAI,YAAA,EAAiB,CAAA;IAWtD,CAAC;;AAVM,8BAAA,GAAyD;IAAhE,OAAO,EACE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAA1B,aAAa,EACE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,cAAE,EAAc,EAAG,EAAE;IAA1D,MAAM,EACE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAAzB,MAAM,EACE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAAzB,WAAW,EACE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,YAAE,EAAY,EAAG,EAAE;IAAtD,SAAS,EACE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAA5B,aAAa,EACE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,eAAE,EAAe,EAAG,EAAE;IAA3D,eAAe,EACE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAQ,IAAA,EAAM,CAAA,gBAAE,EAAgB,EAAG,EAAE;IAA/D,UAAU,EACE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CAA7B,CACC;AAEF;IACA,gBAAgB;IAChB,eAAe,CAAC,cAAc,CAAC;IAC/B,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC;IAChC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC;IACtC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC;IAC/B,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC;IAC/B,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC;IACpC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,OAAO,CAAC;IAClC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC;IACtC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,aAAa,CAAC;IACxC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC;AACnC,CAAC","file":"dropdown.props.js","sourceRoot":"","sourcesContent":["import { EventEmitter, Input, Output } from '@angular/core';\nexport class ElDropdownProps {\n  \n   model: string[]\n   splitButton: boolean = false\n  // only splitButton = true\n   size: string\n   type: string\n  \n  // style\n   menuAlign: string = 'end'\n  \n  // trigger type\n   trigger: string = 'hover'\n   hideOnClick: boolean = true\n  \n  // event\n   visibleChange: EventEmitter<any> = new EventEmitter<any>()\n   selected: EventEmitter<any> = new EventEmitter<any>()\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'model': [{ type: Input },],\n'splitButton': [{ type: Input, args: ['split-button', ] },],\n'size': [{ type: Input },],\n'type': [{ type: Input },],\n'menuAlign': [{ type: Input, args: ['menu-align', ] },],\n'trigger': [{ type: Input },],\n'hideOnClick': [{ type: Input, args: ['hide-on-click', ] },],\n'visibleChange': [{ type: Output, args: ['visible-change', ] },],\n'selected': [{ type: Output },],\n};\n}\n\nfunction ElDropdownProps_tsickle_Closure_declarations() {\n/** @type {?} */\nElDropdownProps.propDecorators;\n/** @type {?} */\nElDropdownProps.prototype.model;\n/** @type {?} */\nElDropdownProps.prototype.splitButton;\n/** @type {?} */\nElDropdownProps.prototype.size;\n/** @type {?} */\nElDropdownProps.prototype.type;\n/** @type {?} */\nElDropdownProps.prototype.menuAlign;\n/** @type {?} */\nElDropdownProps.prototype.trigger;\n/** @type {?} */\nElDropdownProps.prototype.hideOnClick;\n/** @type {?} */\nElDropdownProps.prototype.visibleChange;\n/** @type {?} */\nElDropdownProps.prototype.selected;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}