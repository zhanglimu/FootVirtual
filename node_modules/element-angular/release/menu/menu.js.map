{"version":3,"sources":["../../src/menu/menu.ts"],"names":[],"mappings":"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","file":"menu.js","sourceRoot":"","sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nexport class ElMenu {\n  \n   mode: string = 'vertical'\n   theme: string = 'light'\n   model: string\n   nativeClass: string\n   defaultOpeneds: string[]\n   uniqueOpened: boolean = false\n   menuTrigger: string = 'hover'\n   backgroundColor: string\n   textColor: string\n   activeTextColor: string\n   modelChange: EventEmitter<any> = new EventEmitter<any>()\n  \n  openedMenus: string[] = this.defaultOpeneds ? this.defaultOpeneds.slice(0) : []\n  showBorderIndex: string\n/**\n * @param {?} index\n * @return {?}\n */\nopenMenu(index: string): void {\n    const /** @type {?} */ openedMenus = this.openedMenus\n    if (openedMenus.indexOf(index) !== -1) return\n    this.openedMenus.push(index)\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ncloseMenu(index: string): void {\n    this.openedMenus.splice(this.openedMenus.indexOf(index), 1)\n  }\n/**\n * @param {?} index\n * @param {?=} path\n * @return {?}\n */\nselectHandle(index: string, path?: string): void {\n    const /** @type {?} */ main: string = path || index\n    this.model = main\n    this.modelChange.emit(main)\n  }\n/**\n * @return {?}\n */\nhoverBackgroundColor(): string {\n    return this.backgroundColor ? this.hexToRGB() : ''\n  }\n/**\n * @return {?}\n */\nprivate hexToRGB(): string {\n    const /** @type {?} */ hex: number = + this.backgroundColor.replace('#', '0x')\n    const /** @type {?} */ rgb: number[] = [(hex & 0xff0000) >> 16, (hex & 0x00ff00) >> 8, hex & 0x0000ff]\n    return `rgb(${rgb.map(v => ~~(0.8 * v)).join(',')})`\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-menu',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ul [class]=\"'el-menu ' + nativeClass\"\n      [class.el-menu--horizontal]=\"mode === 'horizontal'\"\n      [ngStyle]=\"{ backgroundColor: backgroundColor || '' }\">\n      <ng-content></ng-content>\n    </ul>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'mode': [{ type: Input },],\n'theme': [{ type: Input },],\n'model': [{ type: Input },],\n'nativeClass': [{ type: Input, args: ['class', ] },],\n'defaultOpeneds': [{ type: Input, args: ['default-openeds', ] },],\n'uniqueOpened': [{ type: Input, args: ['unique-opened', ] },],\n'menuTrigger': [{ type: Input, args: ['menu-trigger', ] },],\n'backgroundColor': [{ type: Input, args: ['background-color', ] },],\n'textColor': [{ type: Input, args: ['text-color', ] },],\n'activeTextColor': [{ type: Input, args: ['active-text-color', ] },],\n'modelChange': [{ type: Output },],\n};\n}\n\nfunction ElMenu_tsickle_Closure_declarations() {\n/** @type {?} */\nElMenu.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElMenu.ctorParameters;\n/** @type {?} */\nElMenu.propDecorators;\n/** @type {?} */\nElMenu.prototype.mode;\n/** @type {?} */\nElMenu.prototype.theme;\n/** @type {?} */\nElMenu.prototype.model;\n/** @type {?} */\nElMenu.prototype.nativeClass;\n/** @type {?} */\nElMenu.prototype.defaultOpeneds;\n/** @type {?} */\nElMenu.prototype.uniqueOpened;\n/** @type {?} */\nElMenu.prototype.menuTrigger;\n/** @type {?} */\nElMenu.prototype.backgroundColor;\n/** @type {?} */\nElMenu.prototype.textColor;\n/** @type {?} */\nElMenu.prototype.activeTextColor;\n/** @type {?} */\nElMenu.prototype.modelChange;\n/** @type {?} */\nElMenu.prototype.openedMenus;\n/** @type {?} */\nElMenu.prototype.showBorderIndex;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}