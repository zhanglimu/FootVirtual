{"version":3,"sources":["../../src/checkbox/checkbox.ts"],"names":[],"mappings":"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","file":"checkbox.js","sourceRoot":"","sourcesContent":["import {\n  Component, Input, Output, EventEmitter, OnInit,\n  ElementRef, Optional, AfterViewInit, ViewChild, OnChanges, SimpleChanges, forwardRef,\n} from '@angular/core';\nimport { ElCheckboxGroup } from './checkbox-group';\nimport { isParentTag, removeNgTag } from '../shared/utils/index';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nexport class ElCheckbox implements OnInit, AfterViewInit, OnChanges, ControlValueAccessor {\n  \n   content: any\n/**\n * @param {?} val\n * @return {?}\n */\nset disabled(val: boolean) {   // todo, is discarded.\n    console.warn('Element Angular: (disabled) is discarded, use [elDisabled] replace it.')\n  }\n   elDisabled: boolean = false\n   label: string\n   model: any\n   indeterminate: boolean = false\n   checked: boolean = false\n   name: string\n   trueLabel: string | number\n   modelChange: EventEmitter<any> = new EventEmitter<any>()\n  \n  labels: any[]\n  parentIsGroup: boolean = false\n  isFocus: boolean = false\n  showLabel: boolean = false\n/**\n * @param {?} hostGroup\n * @param {?} el\n */\nconstructor(\nprivate hostGroup: ElCheckboxGroup,\nprivate el: ElementRef,\n  ) {\n  }\n/**\n * @return {?}\n */\nisChecked(): boolean {\n    if (this.parentIsGroup) {\n      return this.hostGroup.model.indexOf(this.label) > -1\n    }\n    return this.model\n  }\n/**\n * @param {?} t\n * @param {?=} notEmit\n * @return {?}\n */\nchangeHandle(t: boolean, notEmit: boolean = false): void {\n    if (this.parentIsGroup) {\n      return this.hostGroup.updateModelFromChildren(t, this.label)\n    }\n    this.model = t\n    this.checked = this.isChecked()\n  \n    if (notEmit) return\n    this.modelChange.emit(this.model)\n    this.controlChange(this.model)\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    const /** @type {?} */ nativeElement = this.el.nativeElement\n    this.parentIsGroup = isParentTag(nativeElement, 'el-checkbox-group')\n    removeNgTag(nativeElement)\n    // update model from group\n    if (this.parentIsGroup) {\n      this.labels = this.hostGroup.model\n      this.model = this.isChecked()\n      // update handle\n      this.hostGroup.subscriber.push(() => {\n        this.model = this.isChecked()\n        this.checked = this.isChecked()\n      })\n    }\n    this.checked = this.isChecked()\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if (!changes || !changes.model) return\n    if (changes.model.isFirstChange()) return\n    \n    this.changeHandle(changes.model.currentValue, true)\n  }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n    const /** @type {?} */ contentText = this.content && this.content.nativeElement.innerText\n    setTimeout(() => {\n      this.showLabel = !contentText || contentText.length < 1\n    }, 0)\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this.model = value\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this.controlChange = fn\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this.controlTouch = fn\n  }\nprivate controlChange: Function = () => {}\nprivate controlTouch: Function = () => {}\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-checkbox',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ElCheckbox),\n    multi: true\n  }],\n  template: `\n    <label class=\"el-checkbox\">\n    <span class=\"el-checkbox__input\"\n      [class.is-disabled]=\"elDisabled\" [class.is-focus]=\"isFocus\"\n      [class.is-indeterminate]=\"indeterminate\" [class.is-checked]=\"checked\">\n      <span class=\"el-checkbox__inner\"></span>\n      <input class=\"el-checkbox__original\" type=\"checkbox\"\n        [disabled]=\"elDisabled\" [value]=\"label\" [name]=\"name\"\n        [ngModel]=\"model\" (ngModelChange)=\"changeHandle($event)\"\n        (focus)=\"isFocus = true\" (blur)=\"isFocus = false\">\n    </span>\n    <span class=\"el-checkbox__label\" style=\"padding-left: 6px;\">\n      <ng-container *ngIf=\"showLabel\">{{label}}</ng-container>\n      <span *ngIf=\"!showLabel\" #content>\n        <ng-content></ng-content>\n      </span>\n    </span>\n    </label>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElCheckboxGroup, decorators: [{ type: Optional }, ]},\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: ViewChild, args: ['content', ] },],\n'disabled': [{ type: Input },],\n'elDisabled': [{ type: Input },],\n'label': [{ type: Input },],\n'model': [{ type: Input },],\n'indeterminate': [{ type: Input },],\n'checked': [{ type: Input },],\n'name': [{ type: Input },],\n'trueLabel': [{ type: Input, args: ['true-label', ] },],\n'modelChange': [{ type: Output },],\n};\n}\n\nfunction ElCheckbox_tsickle_Closure_declarations() {\n/** @type {?} */\nElCheckbox.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElCheckbox.ctorParameters;\n/** @type {?} */\nElCheckbox.propDecorators;\n/** @type {?} */\nElCheckbox.prototype.content;\n/** @type {?} */\nElCheckbox.prototype.elDisabled;\n/** @type {?} */\nElCheckbox.prototype.label;\n/** @type {?} */\nElCheckbox.prototype.model;\n/** @type {?} */\nElCheckbox.prototype.indeterminate;\n/** @type {?} */\nElCheckbox.prototype.checked;\n/** @type {?} */\nElCheckbox.prototype.name;\n/** @type {?} */\nElCheckbox.prototype.trueLabel;\n/** @type {?} */\nElCheckbox.prototype.modelChange;\n/** @type {?} */\nElCheckbox.prototype.labels;\n/** @type {?} */\nElCheckbox.prototype.parentIsGroup;\n/** @type {?} */\nElCheckbox.prototype.isFocus;\n/** @type {?} */\nElCheckbox.prototype.showLabel;\n/** @type {?} */\nElCheckbox.prototype.controlChange;\n/** @type {?} */\nElCheckbox.prototype.controlTouch;\n/** @type {?} */\nElCheckbox.prototype.hostGroup;\n/** @type {?} */\nElCheckbox.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}